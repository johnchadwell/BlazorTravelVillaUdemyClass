@page "/bindprop"
@using Model
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedLocalStorage localStorage
@inject ProtectedSessionStorage sessionStorage
@*<h1>Hello, world!</h1>

    Welcome to your new app.

    <SurveyPrompt Title="How is Blazor working for you?" />*@
<h2 class="bg-light border p-2">Room</h2>
Room: @Room.RoomName
<br />
Price: @Room.Price
<br />
<br />

<div>
    <input type="number" @bind-value="@Room.Price" @bind-value:event="oninput" />
</div>
<br />
<select @bind="selectedRoom">
    @foreach (BlazorRoomProp r in Room.RoomProps)
    {
        <option value="@r.Name">@r.Name</option>

    }
</select>
<div>
    Available?: <input type="checkbox" @bind-value="@Room.IsActive" checked="@(Room.IsActive?"checked":null)" @bind-value:event="onchange" /> @(Room.IsActive?"Taken":"Available")
</div>
<div>
    <br />
    <table class="table table-dark">
        @foreach (var r in Rooms)
        {
            <tr>
                <td>
                    <input type="text" @bind-value="r.RoomName" @bind-value:event="oninput" />
                </td>
                <td>
                    <input type="text" @bind-value="r.Price" @bind-value:event="oninput" />
                </td>
                @foreach (var p in r.RoomProps)
                {
                    <td>
                        @p.Name - @p.Value
                    </td>

                }
            </tr>

        }
    </table>
    <br />
    @foreach (var r in Rooms)
    {
        <p>@r.RoomName's Price is @r.Price</p>
    }
</div>

<span>Selected Prop: @selectedRoom</span>


<p>Counter Value from other Page (Session) : @CounterSession</p>
<p>Counter Value from other Page (Local) : @CounterLocal</p>


@code {

    List<BlazorRoom> Rooms = new List<BlazorRoom>();
    public int CounterLocal { get; set; }
    public int CounterSession { get; set; }

    string selectedRoom = "";
    BlazorRoom Room = new BlazorRoom()
    {
        Id = 1,
        RoomName = "VillaSuite",
        IsActive = true,
        Price = 499,
        RoomProps = new List<BlazorRoomProp>
{
                new BlazorRoomProp{Id=1,Name="Sql Ft", Value="100"},
                new BlazorRoomProp{Id=2,Name="Occupancy", Value="3"},
            }
    };

    protected override async Task OnInitializedAsync()
    {

        var resultLocal = await localStorage.GetAsync<int>("counterLocal");
        CounterLocal = resultLocal.Success ? resultLocal.Value : 0;

        var resultSession = await sessionStorage.GetAsync<int>("counterSession");
        CounterSession = resultSession.Success ? resultSession.Value : 0;

        base.OnInitialized();

        Rooms.Add(new BlazorRoom()
        {
            Id = 2,
            RoomName = "VillaSuite Two Bedroom",
            IsActive = true,
            Price = 799,
            RoomProps = new List<BlazorRoomProp>
{
                new BlazorRoomProp{Id=1,Name="Sql Ft", Value="400"},
                new BlazorRoomProp{Id=2,Name="Occupancy", Value="4"},
            }
        });

        Rooms.Add(new BlazorRoom()
        {
            Id = 1,
            RoomName = "VillaSuite One Bedroom",
            IsActive = true,
            Price = 499,
            RoomProps = new List<BlazorRoomProp>
{
                new BlazorRoomProp{Id=1,Name="Sql Ft", Value="200"},
                new BlazorRoomProp{Id=2,Name="Occupancy", Value="2"},
            }
        });

    }
}


